- op: replace
  path: /spec/template/spec/files/2/content
  value: |
    #!/bin/bash

    set -o nounset
    set -o pipefail
    set -o errexit

    systemctl stop kubelet

    declare -a BINARIES=("kubeadm" "kubectl" "kubelet")

    # Define the base URL and version
    BASE_URL="https://kubernetesreleases.blob.core.windows.net/dalec-packages"
    VERSION="${KUBERNETES_VERSION}"
    VERSION=$${VERSION#v}
    OS_VERSION="azl3"
    ARCH="x86_64"

    for BINARY in "$${BINARIES[@]}"; do
      echo "* downloading and extracting binary: $${BINARY} $${VERSION}"
      RPM_FILE="/tmp/$${BINARY}-$${VERSION}-1.$${OS_VERSION}.$${ARCH}.rpm"
      RPM_URL="$${BASE_URL}/$${BINARY}/$${VERSION}/$${OS_VERSION}/$${ARCH}/$${BINARY}-$${VERSION}-1.$${OS_VERSION}.$${ARCH}.rpm"

      echo "Downloading from: $${RPM_URL}"
      curl -L --retry 10 --retry-delay 5 "$${RPM_URL}" --output "$${RPM_FILE}"

      # Extract just the binary from the RPM package directly to /usr/bin
      echo "Extracting $${BINARY} binary to /usr/bin"
      rpm2cpio "$${RPM_FILE}" | cpio -idmv
      cp "./usr/bin/$${BINARY}" "/usr/bin/$${BINARY}"
      chmod +x "/usr/bin/$${BINARY}"

      # Clean up
      rm -rf ./usr
      rm -f "$${RPM_FILE}"
    done

    systemctl restart kubelet

    echo "kubeadm version: $(kubeadm version -o=short)"
    echo "kubectl version: $(kubectl version --client=true)"
    echo "kubelet version: $(kubelet --version)"
