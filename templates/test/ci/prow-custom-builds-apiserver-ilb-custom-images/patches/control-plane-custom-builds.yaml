- op: add
  path: /spec/kubeadmConfigSpec/files/-
  value:
    content: |
      #!/bin/bash

      set -o nounset
      set -o pipefail
      set -o errexit

      # Only stop kubelet if it's running
      if systemctl is-active --quiet kubelet; then
        echo "Stopping kubelet service"
        systemctl stop kubelet
      fi

      declare -a BINARIES=("kubeadm" "kubectl" "kubelet")

      # Define the base URL and version
      BASE_URL="https://kubernetesreleases.blob.core.windows.net/dalec-packages"
      VERSION="${KUBERNETES_VERSION}"
      VERSION=$${VERSION#v}
      OS_VERSION="ubuntu24.04"
      ARCH="amd64"

      # Create temporary directory for extraction
      TEMP_DIR=$(mktemp -d)
      trap "rm -rf $${TEMP_DIR}" EXIT

      for BINARY in "$${BINARIES[@]}"; do
        if [[ "$${BINARY}" == "kubelet" ]]; then
          DEB_VERSION="ubuntu24.04u1"
        else
          DEB_VERSION="ubuntu24.04u2"
        fi
        
        echo "* downloading and extracting binary: $${BINARY} $${VERSION} with deb version $${DEB_VERSION}"
        DEB_FILE="$${TEMP_DIR}/$${BINARY}_$${VERSION}-$${DEB_VERSION}_$${ARCH}.deb"
        DEB_URL="$${BASE_URL}/$${BINARY}/$${VERSION}/$${OS_VERSION}/$${ARCH}/$${BINARY}_$${VERSION}-$${DEB_VERSION}_$${ARCH}.deb"

        echo "Downloading from: $${DEB_URL}"
        curl -L --retry 10 --retry-delay 5 "$${DEB_URL}" --output "$${DEB_FILE}"

        # Extract the deb package
        echo "Extracting $${DEB_FILE}"
        dpkg-deb -x "$${DEB_FILE}" "$${TEMP_DIR}/$${BINARY}_extract"

        # Find and replace the binary
        BINARY_PATH=$(find "$${TEMP_DIR}/$${BINARY}_extract" -name "$${BINARY}" -type f | head -n1)
        if [[ -n "$${BINARY_PATH}" ]]; then
          echo "Replacing /usr/bin/$${BINARY} with custom build"
          # Backup original binary
          cp "/usr/bin/$${BINARY}" "/usr/bin/$${BINARY}.backup.$(date +%s)" || true
          # Replace with new binary
          cp "$${BINARY_PATH}" "/usr/bin/$${BINARY}"
          chmod +x "/usr/bin/$${BINARY}"
        else
          echo "ERROR: Could not find $${BINARY} in extracted package"
          exit 1
        fi
      done
      systemctl restart kubelet

      echo "Custom Kubernetes binaries installed successfully"
      echo "kubeadm version: $(kubeadm version -o=short)"
      echo "kubectl version: $(kubectl version --client=true)"
      echo "kubelet version: $(kubelet --version)"
    path: /tmp/replace-k8s-binaries.sh
    owner: "root:root"
    permissions: "0744"
- op: add
  path: /spec/kubeadmConfigSpec/preKubeadmCommands/-
  value:
    bash -c /tmp/replace-k8s-binaries.sh
